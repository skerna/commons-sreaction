pluginManagement {
    resolutionStrategy {

        eachPlugin {
            if (requested.id.id == "kotlin-multiplatform") {
                useModule("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion")
            }
            if (requested.id.id == "kotlin-platform-jvm") {
                useModule("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion")
            }
        }
    }
}
def isUncluded = gradle.parent != null
if(isUncluded){
    includeBuild("../commons-slbase"){
        dependencySubstitution {
            substitute module('com.gitlab.skerna.libs:commons-slbase-metadata') with project(':')
            substitute module('com.gitlab.skerna.libs:commons-slbase-jvm') with project(':')
            substitute module('com.gitlab.skerna.libs:commons-slbase-js') with project(':')
        }
    }
}
